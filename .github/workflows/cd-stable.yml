name: CD-stable
on:
  push:
    tags: ['v[0-9]+.[0-9]+.[0-9]+']
jobs:
  test:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - run: .\scripts\test.ps1
  lint:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: .\scripts\lint.ps1
  build-and-release:
    needs: [test, lint]
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Build pyinstaller
        run: |
          python -m pip install --upgrade pip
          git clone --depth 1 --branch v4.1 https://github.com/pyinstaller/pyinstaller
          cd .\pyinstaller\bootloader\
          python ./waf all
          cd ..
          python setup.py install
      - name: Build
        run: |
          pyinstaller --onefile src\main.py --name cyberpunk2077-r6-config-editor --windowed --icon=logo.ico
          tar -c -f cyberpunk2077-r6-config-editor.zip dist specs.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cyberpunk2077-r6-config-editor.zip
          asset_name: cyberpunk2077-r6-config-editor.zip
          asset_content_type: application/zip
